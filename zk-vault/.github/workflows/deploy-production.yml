name: Deploy to Production

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        default: 'latest'

env:
  NODE_VERSION: "20.x"
  FIREBASE_PROJECT_PROD: "zk-vault-prod"

jobs:
  security-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
      - name: Run additional security checks
        run: |
          # Check for secrets in code
          npm run lint
          # Run dependency vulnerability check
          npx audit-ci --moderate

  deploy-production:
    runs-on: ubuntu-latest
    needs: [security-check]
    environment:
      name: production
      url: https://zk-vault.web.app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run full test suite
        run: |
          npm run lint
          npm run type-check
          npm run test:coverage

      - name: Build packages for production
        run: |
          npm run build
        env:
          NODE_ENV: production
          REACT_APP_ENVIRONMENT: production

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Production
        run: |
          firebase use ${{ env.FIREBASE_PROJECT_PROD }}
          firebase deploy --only hosting,functions,firestore:rules,storage:rules
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_PROD }}

      - name: Deploy browser extension to production
        run: |
          # Build extension for production
          cd packages/browser-extension
          npm run build:prod
          # Archive extension for store submission
          zip -r zk-vault-extension-prod-${{ github.sha }}.zip dist/

      - name: Upload production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-build-${{ github.sha }}
          path: |
            packages/*/dist/
            packages/browser-extension/*.zip
          retention-days: 30

      - name: Create deployment record
        run: |
          echo "üöÄ Production deployment completed!"
          echo "üìÖ Deployed at: $(date)"
          echo "üîó Production URL: https://zk-vault.web.app"
          echo "üì¶ Version: ${{ github.ref_name }}"
          echo "üÜî Commit: ${{ github.sha }}"

      - name: Notify success
        if: success()
        run: |
          echo "‚úÖ Production deployment successful!"
          echo "üåê Live at: https://zk-vault.web.app"

  post-deploy-checks:
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: success()
    
    steps:
      - name: Health check
        run: |
          # Wait a moment for deployment to propagate
          sleep 30
          # Basic health check (customize URL as needed)
          curl -f https://zk-vault.web.app/ || exit 1
          echo "‚úÖ Production site is responding"

      - name: Performance audit
        run: |
          # Install Lighthouse CLI
          npm install -g lighthouse
          # Run basic performance audit
          lighthouse https://zk-vault.web.app --only-categories=performance --chrome-flags="--headless" --output=json --output-path=./lighthouse-results.json
          echo "üìä Performance audit completed"
        continue-on-error: true
