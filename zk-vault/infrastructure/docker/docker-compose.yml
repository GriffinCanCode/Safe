version: '3.8'

services:
  # Firebase Emulator Suite
  firebase-emulators:
    image: node:18-alpine
    container_name: zk-vault-firebase-emulators
    working_dir: /app
    ports:
      - "4000:4000"   # Emulator UI
      - "5000:5000"   # Hosting
      - "5001:5001"   # Functions
      - "8080:8080"   # Firestore
      - "9099:9099"   # Auth
      - "9199:9199"   # Storage
      - "8085:8085"   # Pub/Sub
    volumes:
      - ../..:/app
      - firebase-data:/app/emulator-data
    environment:
      - NODE_ENV=development
      - FIREBASE_EMULATOR_HUB=0.0.0.0:4400
    command: >
      sh -c "
        npm install -g firebase-tools &&
        firebase emulators:start --only auth,firestore,functions,hosting,storage,pubsub --project=zk-vault-local
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ZK-Vault Web Application
  web-app:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.web
    container_name: zk-vault-web
    ports:
      - "3000:3000"
    volumes:
      - ../..:/app
      - /app/node_modules
      - /app/packages/web-app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_FIREBASE_API_KEY=fake-api-key
      - VITE_FIREBASE_AUTH_DOMAIN=localhost
      - VITE_FIREBASE_PROJECT_ID=zk-vault-local
      - VITE_FIREBASE_STORAGE_BUCKET=zk-vault-local.appspot.com
      - VITE_FIREBASE_MESSAGING_SENDER_ID=123456789
      - VITE_FIREBASE_APP_ID=1:123456789:web:local
      - VITE_USE_EMULATORS=true
    depends_on:
      - firebase-emulators
    command: >
      sh -c "
        npm install &&
        cd packages/web-app &&
        npm run dev
      "

  # ZK-Vault Functions (Local)
  functions:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.functions
    container_name: zk-vault-functions
    ports:
      - "5001"
    volumes:
      - ../..:/app
      - /app/node_modules
      - /app/functions/node_modules
    environment:
      - NODE_ENV=development
      - FIREBASE_PROJECT_ID=zk-vault-local
      - FUNCTIONS_EMULATOR=true
    depends_on:
      - firebase-emulators
    command: >
      sh -c "
        npm install &&
        cd functions &&
        npm run serve
      "

  # Nginx Reverse Proxy (for production-like local setup)
  nginx:
    image: nginx:alpine
    container_name: zk-vault-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web-app
      - firebase-emulators
    restart: unless-stopped

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: zk-vault-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # PostgreSQL (alternative to Firestore for local storage)
  postgres:
    image: postgres:15-alpine
    container_name: zk-vault-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=zkvault
      - POSTGRES_USER=zkvault
      - POSTGRES_PASSWORD=zkvault_local_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Minio (S3-compatible storage alternative)
  minio:
    image: minio/minio:latest
    container_name: zk-vault-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=zkvault
      - MINIO_ROOT_PASSWORD=zkvault_local_password
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  # Backup Service
  backup:
    image: alpine:latest
    container_name: zk-vault-backup
    volumes:
      - firebase-data:/backup/firebase:ro
      - postgres-data:/backup/postgres:ro
      - minio-data:/backup/minio:ro
      - ./backups:/backup/output
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
    command: >
      sh -c "
        apk add --no-cache dcron &&
        echo '0 2 * * * /backup/backup.sh' | crontab - &&
        crond -f
      "

volumes:
  firebase-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  minio-data:
    driver: local

networks:
  default:
    name: zk-vault-network
    driver: bridge
